{% extends "base.html.twig" %}

{% block title %}Fansubs{% endblock %}

{% block scripts %}
<script>
$(document).ready(function() {
  $('#fansubs_new').bind('click', function () {
    openFormModal();
  });

  $('#fansubs_search_criteria').keydown(function(e) {
    const keycode = (e.keyCode ? e.keyCode : e.which);
    if (keycode == '13') {
      searchFansubs();
    }
  });

  $('#fansubs_search label').bind('click', function () {
    searchFansubs();
  });

  getFansubData();
  addFormValidation();
});//$(document).ready

$('.fansubs_form').submit(function(e) {
  const isValid = $('.fansubs_form').form('is valid');
  if (isValid) {
    e.preventDefault();
    const id = $('#fansubs_form_id').val();
    id === '' ? submitNewFansub() : submitEditFansub();
  }
  return false;
});//$('.fansubs_form').submit

function submitNewFansub() {
  jsonData = {
    name: $('#fansubs_form_name').val()
  };

  $.ajax({
    type: 'POST',
    url: '/api/fansubs',
    data: JSON.stringify(jsonData),
    contentType: 'application/json',
    encode: true,
    success: function (data, textStatus, xhr) {
      clearForm();
      closeFormModal();
      getFansubData();
      alertSuccess(`Fansub ${jsonData.name} created with success`);
    },
    error: function(jqXHR, textStatus, errorThrown) {
      let message = 'Anything wrong is not right';

      if (isUnprocessableContent(jqXHR.status)) {
        message = `Fansub ${jsonData.name} already exists`;
      }

      alertError(message);
    },
  });
}//submitNewFansub

function submitEditFansub() {
  alertInfo('Soon');
}//submitEditFansub

function getFansubData() {
  $('#fansubs_data tbody .fansubs_data_row').remove();
  $.get('/api/fansubs', function(object, status) {
    if (object.data.length < 1) {
      $('#fansubs_data tbody .fansubs_data_norows').show();
      return;
    }

    $('#fansubs_data tbody .fansubs_data_norows').hide();
    $.each(object.data, function (i, item) {
      $('#fansubs_data tbody').append(
        getFansubRow(item.id, item.name, formatDate(item.createdAt), formatDate(item.updatedAt))
      );
    });

    $('.fansubs_edit').bind('click', function () {
      alertInfo('Soon');
    });
    $('.fansubs_remove').bind('click', function () {
      alertInfo('Soon');
    });
  });
}//getFansubData

function getFansubRow(id, name, created, updated) {
  return `<tr
      class="fansubs_data_row"
      data-fansubs-search-name="${name}"
    >
    <td class="collapsing">${id}</td>
    <td>${name}</td>
    <td class="collapsing">${created}</td>
    <td class="collapsing">${updated}</td>
    <td class="collapsing">
      <button class="ui icon button fansubs_edit">
      <i class="edit icon"></i>
      </button>
      <button class="ui icon button fansubs_remove">
      <i class="trash icon"></i>
      </button>
    </td>
  </tr>`;
}//getFansubRow

function searchFansubs() {
  $('#fansubs_data tbody .fansubs_data_norows').hide();
  $('#fansubs_data tbody .fansubs_data_row').show();

  const searchCriteria = $('#fansubs_search_criteria').val();
  if (searchCriteria == '') {
    return;
  }

  let listSize = $('#fansubs_data tbody .fansubs_data_row').length;
  let hideCount = 0;

  $('#fansubs_data tbody .fansubs_data_row').each(function() {
    let hide = true;

    let row = $(this);
    const fansubName = row.data('fansubs-search-name');
    if (fansubName.toLowerCase().includes(searchCriteria.toLowerCase())) {
      hide = false;
    }

    if (hide) {
      row.hide();
      hideCount++;
    }
  });

  if (hideCount == listSize) {
    $('#fansubs_data tbody .fansubs_data_norows').show();
  }
}//searchFansubs

function openFormModal() {
  $('.fansubs_modal')
    .modal({
      closable: false,
      closeIcon: true,
      onHidden: function(){
        clearForm();
      },
      onApprove: function() {
        $('.fansubs_form').submit();
        return false;
      }
    })
    .modal('show')
  ;
}//openFormModal

function closeFormModal() {
  $('.fansubs_modal').modal('hide');
}//closeFormModal

function addFormValidation() {
  $('.fansubs_form')
    .form({
      on: 'submit',
      fields: {
        fansubs_form_name: {
          identifier: 'fansubs_form_name',
          rules: [
            {
              type: 'empty',
              prompt: 'Fill name of fansub'
            }
          ]
        }
      }
    })
  ;
}//addFormValidation

function clearForm() {
  $('.fansubs_form').form('reset');
  $('.fansubs_form').trigger('reset');
}//clearForm
</script>
{% endblock %}

{% block body %}
<h1 class="ui dividing header">Fansubs</h1>

<div class="ui grid">
  <div class="two wide column">
    <button class="ui button" id="fansubs_new"><i class="star icon"></i> New</button>
  </div>
  <div class="fourteen wide column">
    <div class="ui file action input" id="fansubs_search">
      <input id="fansubs_search_criteria" type="text" placeholder="Search by fansub name">
      <label for="search" class="ui button">
        <i class="search icon"></i>Search
      </label>
    </div>
  </div>

  <div class="sixteen wide column">
    <table class="ui celled table" id="fansubs_data">
      <caption></caption>
      <thead>
        <tr>
          <th class="collapsing">ID</th>
          <th>Name</th>
          <th class="collapsing">Created</th>
          <th class="collapsing">Updated</th>
          <th class="collapsing"></th>
        </tr>
      </thead>
      <tbody>
        <tr class="center aligned fansubs_data_norows" hidden>
          <td colspan="5">None fansub found</td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="sixteen wide column">
    <div class="ui modal fansubs_modal">
      <i class="close icon"></i>
      <div class="header">Form</div>
      <div class="content">
        <form class="ui form fansubs_form">
          <input type="hidden" name="fansubs_form_id" id="fansubs_form_id" value="" />
          <div class="field">
            <label for="fansubs_form_name">Name</label>
            <input type="text" name="fansubs_form_name" id="fansubs_form_name" placeholder="Name of fansub">
          </div>
          <div class="ui error message"></div>
          <div class="ui submit primary button">Send</div>
        </form>
      </div>
    </div>
  </div>
</div>
{% endblock %}